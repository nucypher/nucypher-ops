- name: "Ursula Status"
  hosts: "{{ play_hosts }}"
  remote_user: "{{default_user}}"
  gather_facts: no
  tasks:

    - name: Get public ip
      uri:
        url: https://api.ipify.org
        return_content: yes
      register: ip_response

    - name: "Get LogPath"
      become: yes
      shell:
        cmd: docker ps --no-trunc | grep ursula | cut -f 1 -d " "
      register: ursula_container_name

    - name: "Wait for Ursula Log"
      become: yes
      lineinfile:
        dest: "/var/lib/docker/containers/{{ursula_container_name['stdout']}}/{{ursula_container_name['stdout']}}-json.log"
        line: "Working ~ Keep Ursula Online!"
      check_mode: yes
      register: serving

    - name: "Read Ursula Log"
      become: yes
      command: docker logs ursula
      register: ursula_logs

    - name: "Get Current running Image"
      become: yes
      command: sudo docker ps --no-trunc --format \"\{\{.Image\}\}\"
      register: running_docker_image

    - name: "Get Current running Command"
      become: yes
      command: sudo docker ps --no-trunc --format \"\{\{.Command\}\}\"
      register: running_docker_command

    - name: "Request Ursula Status"
      become: yes
      uri:
        url: "https://{{ip_response.content}}:9151/status/?json=true"
        validate_certs: no
      register: status_data
      ignore_errors: yes
      when: serving

    - name: Print Ursula Status Data
      ignore_errors: no
      debug:
        msg:
          "local nickname: {{host_nickname}}\n
          {% if serving and 'json' in status_data %}nickname: {{status_data.json.nickname.text}}\n
          staker address:          {{status_data.json.staker_address}}\n
          operator address:          {{status_data.json.operator_address}}\n
          rest url:                https://{{status_data.json.rest_url}}\n
          \tversion:               {{status_data.json.version}}\n
          \tETH:                   {{status_data.json.balance_eth}}\n{% endif %}
          \tursula docker image:   {{running_docker_image.stdout}}\n
          \tursula command:        {{running_docker_command.stdout}}\n
          \tlast log line:         {{ursula_logs['stdout_lines'][-1]}}\n"
